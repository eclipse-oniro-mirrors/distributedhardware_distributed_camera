# Copyright (c) 2022-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import(
    "//foundation/distributedhardware/distributed_camera/distributedcamera.gni")

module_out_path = "distributed_camera/dcamera_data_process_test"

config("module_private_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "${services_path}/data_process/include/interfaces",
    "${services_path}/data_process/include/eventbus",
    "${services_path}/data_process/include/pipeline",
    "${services_path}/data_process/include/utils",
    "${services_path}/data_process/include/pipeline_node/multimedia_codec/decoder",
    "${services_path}/data_process/include/pipeline_node/multimedia_codec/encoder",
    "${services_path}/data_process/include/pipeline_node/fpscontroller",
    "${services_path}/data_process/include/pipeline_node/scale_conversion",
    "${services_path}/cameraservice/sinkservice/include/distributedcameramgr",
    "${common_path}/include/constants",
    "${common_path}/include/utils",
    "${innerkits_path}/native_cpp/camera_source/include",
    "${fwk_common_path}/utils/include",
    "${fwk_utils_path}/include/eventbus",
    "${feeding_smoother_path}/base",
    "${services_path}/cameraservice/base/include",
  ]
}

ohos_unittest("DCameraDataProcessPipelineNodeTest") {
  module_out_path = module_out_path

  sources = [
    "decode_data_process_test.cpp",
    "encode_data_process_test.cpp",
    "fps_controller_process_test.cpp",
    "scale_convert_process_test.cpp",
  ]

  configs = [ ":module_private_config" ]

  cflags = [
    "-fPIC",
    "-Wall",
  ]

  if (distributed_camera_common) {
    cflags += [ "-DDCAMERA_SUPPORT_FFMPEG" ]
  }

  deps = [
    "${common_path}:distributed_camera_utils",
    "${services_path}/data_process:distributed_camera_data_process",
  ]

  external_deps = [
    "av_codec:av_codec_client",
    "c_utils:utils",
    "distributed_hardware_fwk:distributedhardwareutils",
    "drivers_interface_display:libdisplay_composer_proxy_1.0",
    "eventhandler:libeventhandler",
    "ffmpeg:libohosffmpeg",
    "graphic_surface:surface",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "media_foundation:media_foundation",
  ]

  defines = [
    "HI_LOG_ENABLE",
    "DH_LOG_TAG=\"DCameraDataProcessPipelineNodeTest\"",
    "LOG_DOMAIN=0xD004150",
  ]
}

group("dcamera_pipeline_node_test") {
  testonly = true
  deps = [ ":DCameraDataProcessPipelineNodeTest" ]
}
