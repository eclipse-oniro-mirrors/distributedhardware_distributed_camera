# Copyright (c) 2021 - 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import(
    "//foundation/distributedhardware/distributed_camera/distributedcamera.gni")

module_out_path = "distributed_camera/dcamera_sink_mgr_test"

config("module_private_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "${services_path}/cameraservice/sinkservice/include/distributedcameramgr",
    "${services_path}/cameraservice/sinkservice/include/distributedcameramgr/callback",
    "${services_path}/cameraservice/sinkservice/include/distributedcameramgr/interface",
    "${services_path}/cameraservice/sinkservice/include/distributedcameramgr/listener",
    "${services_path}/cameraservice/cameraoperator/client/include",
    "${services_path}/cameraservice/cameraoperator/handler/include",
    "${services_path}/cameraservice/base/include",
    "${services_path}/channel/include",
    "${services_path}/data_process/include/pipeline",
    "${services_path}/data_process/include/interfaces",
    "${services_path}/data_process/include/utils",
    "${common_path}/include/constants",
    "${common_path}/include/utils",
    "${innerkits_path}/native_cpp/camera_source/include",
    "${innerkits_path}/native_cpp/camera_source/include/callback",
    "${innerkits_path}/native_cpp/camera_sink/include/callback",

    "${feeding_smoother_path}/base",
    "${feeding_smoother_path}/derived",
    "${feeding_smoother_path}/utils",
  ]
}

ohos_unittest("DCameraSinkMgrTest") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  module_out_path = module_out_path

  sources = [
    "dcamera_sink_access_control_test.cpp",
    "dcamera_sink_controller_test.cpp",
    "dcamera_sink_data_process_test.cpp",
    "dcamera_sink_dev_test.cpp",
    "dcamera_sink_output_test.cpp",
    "dcamera_sink_service_ipc_test.cpp",
  ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  configs = [ ":module_private_config" ]

  deps = [
    "${common_path}:distributed_camera_utils",
    "${innerkits_path}/native_cpp/camera_sink:distributed_camera_sink_sdk",
    "${services_path}/cameraservice/cameraoperator/handler:distributed_camera_handler",
    "${services_path}/cameraservice/sinkservice:distributed_camera_sink",
    "${services_path}/channel:distributed_camera_channel",
    "${services_path}/data_process:distributed_camera_data_process",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libtokensetproc_shared",
    "av_codec:av_codec_client",
    "cJSON:cjson",
    "c_utils:utils",
    "camera_framework:camera_framework",
    "device_manager:devicemanagersdk",
    "distributed_hardware_fwk:distributedhardwareutils",
    "drivers_interface_camera:metadata",
    "drivers_interface_distributed_camera:libdistributed_camera_provider_proxy_1.1",
    "drivers_peripheral_display:hdi_gralloc_client",
    "dsoftbus:softbus_client",
    "eventhandler:libeventhandler",
    "graphic_surface:surface",
    "hilog:libhilog",
    "ipc:ipc_core",
  ]

  defines = [
    "HI_LOG_ENABLE",
    "DH_LOG_TAG=\"DCameraSinkMgrTest\"",
    "LOG_DOMAIN=0xD004150",
  ]
}

group("dcamera_sink_mgr_test") {
  testonly = true
  deps = [ ":DCameraSinkMgrTest" ]
}
